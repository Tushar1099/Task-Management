package com.casestudy.formservice.controller;

import java.util.List;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;

import com.casestudy.formservice.dto.FormDto;
import com.casestudy.formservice.service.FormService;

import lombok.AllArgsConstructor;

@AllArgsConstructor
@Controller
@RequestMapping("/form")
public class FormController {

	private FormService formService;
	
	@PostMapping
	public ResponseEntity<FormDto> createForm(FormDto formDto){
		FormDto savedForm = formService.createForm(formDto);
		return new ResponseEntity<>(savedForm, HttpStatus.CREATED);
	}
	
	@GetMapping("/getByFormId/{id}")
	public ResponseEntity<FormDto> getFormByFormId(@PathVariable("id") Long formId){
		FormDto foundForm = formService.getByFormId(formId);
		return new ResponseEntity<>(foundForm, HttpStatus.OK);
	}
	
	@GetMapping("/getByUserId/{id}")
	public ResponseEntity<FormDto> getFormByUserId(@PathVariable("id") Long userId){
		FormDto foundUser = formService.getByUserId(userId);
		return new ResponseEntity<>(foundUser, HttpStatus.OK);
	}
	
	@GetMapping("/getAllForms")
	public ResponseEntity<List<FormDto>> getAllForms(){
		List<FormDto> allForms = formService.getAllForms();
		return new ResponseEntity<>(allForms, HttpStatus.OK);
	}
}
